{"ast":null,"code":"// src/API.js\nimport axios from 'axios';\nconst apiUrl = 'http://localhost:3000'; // Atualize com o endpoint correto\n\n// Função para fazer o login do usuário\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao fazer login');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Erro na requisição:', error);\n    throw error;\n  }\n};\nexport const processPayment = async (cardNumber, expiryDate, cvv, courseId) => {\n  try {\n    const response = await axios.post(`${apiUrl}/payment`, {\n      cardNumber,\n      expiryDate,\n      cvv,\n      courseId\n    });\n    if (response.status !== 200) {\n      throw new Error('Erro ao processar pagamento');\n    }\n    return response.data; // Retorna a resposta do servidor (por exemplo, confirmação do pagamento)\n  } catch (error) {\n    console.error('Erro ao processar pagamento:', error);\n    throw new Error('Erro ao processar pagamento: ' + error.message);\n  }\n};\n\n// Função para cadastrar um novo usuário\nexport const registerUser = async (name, email, password) => {\n  try {\n    const response = await axios.post(`${apiUrl}/cadastro`, {\n      name,\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao cadastrar usuário:\", error);\n    throw error;\n  }\n};\n\n// Função para enviar pedido de redefinição de senha\nexport const forgotPassword = async email => {\n  try {\n    const response = await axios.post(`${apiUrl}/esqueceu-senha`, {\n      email\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao solicitar redefinição de senha:\", error);\n    throw error;\n  }\n};\n\n// Função para pesquisar cursos\nexport const searchCourses = async query => {\n  try {\n    const response = await axios.get(`${apiUrl}/search-course`, {\n      params: {\n        query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao pesquisar cursos:\", error);\n    throw error;\n  }\n};\n\n// Função para adicionar curso (somente admin)\nexport const addCourse = async (courseData, userData) => {\n  try {\n    const response = await axios.post(`${apiUrl}/add-course`, {\n      courseData,\n      userData\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao adicionar curso:\", error);\n    throw error;\n  }\n};\n\n// Função para remover curso (somente admin)\nexport const removeCourse = async (courseId, userData) => {\n  try {\n    const response = await axios.delete(`${apiUrl}/remove-course/${courseId}`, {\n      data: {\n        userData\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao remover curso:\", error);\n    throw error;\n  }\n};\n\n// Função para visualizar detalhes da compra\nexport const viewPurchaseDetails = async userId => {\n  try {\n    const response = await axios.get(`${apiUrl}/purchase-details/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao visualizar detalhes da compra:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","apiUrl","loginUser","email","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console","processPayment","cardNumber","expiryDate","cvv","courseId","post","status","data","message","registerUser","name","forgotPassword","searchCourses","query","get","params","addCourse","courseData","userData","removeCourse","delete","viewPurchaseDetails","userId"],"sources":["C:/Users/airaw/Documents/venda-cursos/frontend/src/API.js"],"sourcesContent":["// src/API.js\r\nimport axios from 'axios';\r\n\r\nconst apiUrl = 'http://localhost:3000';  // Atualize com o endpoint correto\r\n\r\n// Função para fazer o login do usuário\r\nexport const loginUser = async (email, password) => {\r\n  try {\r\n    const response = await fetch('http://localhost:3000/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Erro ao fazer login');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Erro na requisição:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const processPayment = async (cardNumber, expiryDate, cvv, courseId) => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}/payment`, { \r\n      cardNumber,\r\n      expiryDate,\r\n      cvv,\r\n      courseId \r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      throw new Error('Erro ao processar pagamento');\r\n    }\r\n\r\n    return response.data;  // Retorna a resposta do servidor (por exemplo, confirmação do pagamento)\r\n  } catch (error) {\r\n    console.error('Erro ao processar pagamento:', error);\r\n    throw new Error('Erro ao processar pagamento: ' + error.message);\r\n  }\r\n};\r\n\r\n\r\n\r\n// Função para cadastrar um novo usuário\r\nexport const registerUser = async (name, email, password) => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}/cadastro`, { name, email, password });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao cadastrar usuário:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para enviar pedido de redefinição de senha\r\nexport const forgotPassword = async (email) => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}/esqueceu-senha`, { email });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao solicitar redefinição de senha:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para pesquisar cursos\r\nexport const searchCourses = async (query) => {\r\n  try {\r\n    const response = await axios.get(`${apiUrl}/search-course`, { params: { query } });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao pesquisar cursos:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para adicionar curso (somente admin)\r\nexport const addCourse = async (courseData, userData) => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}/add-course`, { courseData, userData });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao adicionar curso:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para remover curso (somente admin)\r\nexport const removeCourse = async (courseId, userData) => {\r\n  try {\r\n    const response = await axios.delete(`${apiUrl}/remove-course/${courseId}`, { data: { userData } });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao remover curso:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para visualizar detalhes da compra\r\nexport const viewPurchaseDetails = async (userId) => {\r\n  try {\r\n    const response = await axios.get(`${apiUrl}/purchase-details/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao visualizar detalhes da compra:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}