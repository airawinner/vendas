{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = 'http://localhost:3000'; // Atualize com o endpoint correto\n\n// src/API.js\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await fetch('http://localhost:3000/login', {\n      // Certifique-se de que está na porta 3000!\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao fazer login');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Erro na requisição:', error);\n    throw error;\n  }\n};\n\n// Função para enviar pedido de redefinir senha\nexport const forgotPassword = async email => {\n  try {\n    const response = await axios.post(`${apiUrl}/forgot-password`, {\n      email\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao solicitar redefinição de senha:\", error);\n    throw error;\n  }\n};\n\n// Função para pesquisar cursos\nexport const searchCourses = async query => {\n  try {\n    const response = await axios.get(`${apiUrl}/courses`, {\n      params: {\n        query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao pesquisar cursos:\", error);\n    throw error;\n  }\n};\n\n// Função para adicionar curso (somente admin)\nexport const addCourse = async (courseData, userData) => {\n  try {\n    const response = await axios.post(`${apiUrl}/add-course`, {\n      courseData,\n      userData\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao adicionar curso:\", error);\n    throw error;\n  }\n};\n\n// Função para remover curso (somente admin)\nexport const removeCourse = async (courseId, userData) => {\n  try {\n    const response = await axios.delete(`${apiUrl}/remove-course/${courseId}`, {\n      data: {\n        userData\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao remover curso:\", error);\n    throw error;\n  }\n};\n\n// Função para visualizar detalhes da compra\nexport const viewPurchaseDetails = async userId => {\n  try {\n    const response = await axios.get(`${apiUrl}/purchase-details/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao visualizar detalhes da compra:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","apiUrl","loginUser","email","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console","forgotPassword","post","data","searchCourses","query","get","params","addCourse","courseData","userData","removeCourse","courseId","delete","viewPurchaseDetails","userId"],"sources":["C:/Users/airaw/Documents/venda-cursos/frontend/src/API.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiUrl = 'http://localhost:3000';  // Atualize com o endpoint correto\r\n\r\n// src/API.js\r\nexport const loginUser = async (email, password) => {\r\n  try {\r\n    const response = await fetch('http://localhost:3000/login', {  // Certifique-se de que está na porta 3000!\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Erro ao fazer login');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Erro na requisição:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para enviar pedido de redefinir senha\r\nexport const forgotPassword = async (email) => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}/forgot-password`, { email });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao solicitar redefinição de senha:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para pesquisar cursos\r\nexport const searchCourses = async (query) => {\r\n  try {\r\n    const response = await axios.get(`${apiUrl}/courses`, { params: { query } });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao pesquisar cursos:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para adicionar curso (somente admin)\r\nexport const addCourse = async (courseData, userData) => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}/add-course`, { courseData, userData });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao adicionar curso:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para remover curso (somente admin)\r\nexport const removeCourse = async (courseId, userData) => {\r\n  try {\r\n    const response = await axios.delete(`${apiUrl}/remove-course/${courseId}`, { data: { userData } });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao remover curso:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para visualizar detalhes da compra\r\nexport const viewPurchaseDetails = async (userId) => {\r\n  try {\r\n    const response = await axios.get(`${apiUrl}/purchase-details/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao visualizar detalhes da compra:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}