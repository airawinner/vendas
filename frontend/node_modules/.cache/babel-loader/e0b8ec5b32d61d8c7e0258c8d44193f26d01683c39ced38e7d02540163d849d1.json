{"ast":null,"code":"// src/API.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:3000';\n\n// Função para fazer o login do usuário\nexport const loginUser = async email => {\n  try {\n    const response = await fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao fazer login');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Erro na requisição:', error);\n    throw error;\n  }\n};\nexport const getAvailableCourses = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/cursos/disponiveis`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getCoursesByVendorId = async vendorId => {\n  try {\n    const response = await axios.get(`${API_URL}/cursos/vendedor/${vendorId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteCourse = async courseId => {\n  try {\n    const response = await axios.delete(`${API_URL}/cursos/${courseId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Função para cadastrar um novo usuário\nexport const registerUser = async (name, email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/cadastro`, {\n      name,\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao cadastrar usuário:\", error);\n    throw error;\n  }\n};\n\n// Função para enviar pedido de redefinição de senha\nexport const forgotPassword = async email => {\n  try {\n    const response = await axios.post(`${API_URL}/esqueceu-senha`, {\n      email\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao solicitar redefinição de senha:\", error);\n    throw error;\n  }\n};\n\n// Função para pesquisar cursos\nexport const searchCourses = async query => {\n  try {\n    const response = await axios.get(`${API_URL}/search-course`, {\n      params: {\n        query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao pesquisar cursos:\", error);\n    throw error;\n  }\n};\n\n// Função para adicionar curso (somente admin)\nexport const addCourse = async (courseData, userData) => {\n  try {\n    const response = await axios.post(`${API_URL}/cursos`, courseData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const removeCourse = async (courseId, userData) => {\n  try {\n    const response = await axios.delete(`${API_URL}/remove-course/${courseId}`, {\n      data: {\n        userData\n      },\n      // Enviando userData para verificação de permissões\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userData.token}` // Supondo que o admin tenha um token de autenticação\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao remover curso:\", error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n// Função para pesquisar cursos\nexport const viewPurchaseDetails = async query => {\n  try {\n    const response = await axios.get(`${API_URL}/view-purchase-details`, {\n      params: {\n        query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao pesquisar cursos:\", error);\n    throw error;\n  }\n};\n\n// Função para registrar uma compra\nexport const registerPurchase = async course => {\n  try {\n    const purchaseData = {\n      id: course.id,\n      name: course.name,\n      description: course.description,\n      price: course.price,\n      image: course.image,\n      date: new Date().toLocaleDateString('pt-BR') // Formato xx/xx/xxxx\n    };\n    alert('Dados sendo passados');\n    const response = await axios.post(`${API_URL}/purchases`, purchaseData);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao registrar compra:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","loginUser","email","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console","getAvailableCourses","get","data","getCoursesByVendorId","vendorId","deleteCourse","courseId","delete","registerUser","name","password","post","forgotPassword","searchCourses","query","params","addCourse","courseData","userData","removeCourse","Authorization","token","message","viewPurchaseDetails","registerPurchase","course","purchaseData","id","description","price","image","date","Date","toLocaleDateString","alert"],"sources":["C:/Users/Vitor Mendes/Desktop/Vitor Mendes/CEFET/BD/sistemaBD/vendas/frontend/src/API.js"],"sourcesContent":["// src/API.js\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:3000';\n\n// Função para fazer o login do usuário\nexport const loginUser = async (email) => {\n  try {\n    const response = await fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Erro ao fazer login');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Erro na requisição:', error);\n    throw error;\n  }\n};\n\nexport const getAvailableCourses = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/cursos/disponiveis`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getCoursesByVendorId = async (vendorId) => {\n  try {\n    const response = await axios.get(`${API_URL}/cursos/vendedor/${vendorId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const deleteCourse = async (courseId) => {\n  try {\n    const response = await axios.delete(`${API_URL}/cursos/${courseId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n\n// Função para cadastrar um novo usuário\nexport const registerUser = async (name, email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/cadastro`, { name, email, password });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao cadastrar usuário:\", error);\n    throw error;\n  }\n};\n\n// Função para enviar pedido de redefinição de senha\nexport const forgotPassword = async (email) => {\n  try {\n    const response = await axios.post(`${API_URL}/esqueceu-senha`, { email });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao solicitar redefinição de senha:\", error);\n    throw error;\n  }\n};\n\n// Função para pesquisar cursos\nexport const searchCourses = async (query) => {\n  try {\n    const response = await axios.get(`${API_URL}/search-course`, { params: { query } });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao pesquisar cursos:\", error);\n    throw error;\n  }\n};\n\n\n// Função para adicionar curso (somente admin)\nexport const addCourse = async (courseData, userData) => {\n  try {\n    const response = await axios.post(`${API_URL}/cursos`, courseData, {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const removeCourse = async (courseId, userData) => {\n  try {\n    const response = await axios.delete(`${API_URL}/remove-course/${courseId}`, {\n      data: { userData }, // Enviando userData para verificação de permissões\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userData.token}` // Supondo que o admin tenha um token de autenticação\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao remover curso:\", error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n\n\n// Função para pesquisar cursos\nexport const viewPurchaseDetails = async (query) => {\n  try {\n    const response = await axios.get(`${API_URL}/view-purchase-details`, { params: { query } });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao pesquisar cursos:\", error);\n    throw error;\n  }\n};\n\n\n\n// Função para registrar uma compra\nexport const registerPurchase = async (course) => {\n  try {\n    const purchaseData = {\n      id: course.id,\n      name: course.name,\n      description: course.description,\n      price: course.price,\n      image: course.image,\n      date: new Date().toLocaleDateString('pt-BR') // Formato xx/xx/xxxx\n    };\n\n    alert('Dados sendo passados');\n    \n    const response = await axios.post(`${API_URL}/purchases`, purchaseData);\n  \n    return response.data;\n  } catch (error) {\n    console.error('Erro ao registrar compra:', error);\n    throw error;\n  }\n};\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}