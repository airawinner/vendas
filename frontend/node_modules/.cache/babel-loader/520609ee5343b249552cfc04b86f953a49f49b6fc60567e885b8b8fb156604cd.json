{"ast":null,"code":"// src/API.js\nimport axios from 'axios';\nconst apiUrl = 'http://localhost:3000'; // Atualize com o endpoint correto\n\n// Função para fazer o login do usuário\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao fazer login');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Erro na requisição:', error);\n    throw error;\n  }\n};\nconst handleSubmit = async e => {\n  e.preventDefault();\n\n  // Verificar se os campos estão preenchidos corretamente\n  if (!cardNumber || !expiryDate || !cvv) {\n    alert('Por favor, preencha todos os campos.');\n    return;\n  }\n  try {\n    // Chamar a API para processar a compra\n    await processPayment(cardNumber, expiryDate, cvv, selectedCourse.id);\n    alert('Compra realizada com sucesso!');\n    closeModal(); // Fechar o modal após o envio\n  } catch (error) {\n    console.error('Erro ao processar o pagamento:', error);\n    alert('Erro ao processar pagamento, tente novamente.');\n  }\n};\n\n// Função para cadastrar um novo usuário\nexport const registerUser = async (name, email, password) => {\n  try {\n    const response = await axios.post(`${apiUrl}/cadastro`, {\n      name,\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao cadastrar usuário:\", error);\n    throw error;\n  }\n};\n\n// Função para enviar pedido de redefinição de senha\nexport const forgotPassword = async email => {\n  try {\n    const response = await axios.post(`${apiUrl}/esqueceu-senha`, {\n      email\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao solicitar redefinição de senha:\", error);\n    throw error;\n  }\n};\n\n// Função para pesquisar cursos\nexport const searchCourses = async query => {\n  try {\n    const response = await axios.get(`${apiUrl}/search-course`, {\n      params: {\n        query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao pesquisar cursos:\", error);\n    throw error;\n  }\n};\n\n// Função para adicionar curso (somente admin)\nexport const addCourse = async (courseData, userData) => {\n  try {\n    const response = await axios.post(`${apiUrl}/add-course`, {\n      courseData,\n      userData\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao adicionar curso:\", error);\n    throw error;\n  }\n};\n\n// Função para remover curso (somente admin)\nexport const removeCourse = async (courseId, userData) => {\n  try {\n    const response = await axios.delete(`${apiUrl}/remove-course/${courseId}`, {\n      data: {\n        userData\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao remover curso:\", error);\n    throw error;\n  }\n};\n\n// Função para visualizar detalhes da compra\nexport const viewPurchaseDetails = async userId => {\n  try {\n    const response = await axios.get(`${apiUrl}/purchase-details/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao visualizar detalhes da compra:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","apiUrl","loginUser","email","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console","handleSubmit","e","preventDefault","cardNumber","expiryDate","cvv","alert","processPayment","selectedCourse","id","closeModal","registerUser","name","post","data","forgotPassword","searchCourses","query","get","params","addCourse","courseData","userData","removeCourse","courseId","delete","viewPurchaseDetails","userId"],"sources":["C:/Users/airaw/Documents/venda-cursos/frontend/src/API.js"],"sourcesContent":["// src/API.js\r\nimport axios from 'axios';\r\n\r\nconst apiUrl = 'http://localhost:3000';  // Atualize com o endpoint correto\r\n\r\n// Função para fazer o login do usuário\r\nexport const loginUser = async (email, password) => {\r\n  try {\r\n    const response = await fetch('http://localhost:3000/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Erro ao fazer login');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Erro na requisição:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  // Verificar se os campos estão preenchidos corretamente\r\n  if (!cardNumber || !expiryDate || !cvv) {\r\n    alert('Por favor, preencha todos os campos.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Chamar a API para processar a compra\r\n    await processPayment(cardNumber, expiryDate, cvv, selectedCourse.id);\r\n    alert('Compra realizada com sucesso!');\r\n    closeModal(); // Fechar o modal após o envio\r\n  } catch (error) {\r\n    console.error('Erro ao processar o pagamento:', error);\r\n    alert('Erro ao processar pagamento, tente novamente.');\r\n  }\r\n};\r\n\r\n\r\n// Função para cadastrar um novo usuário\r\nexport const registerUser = async (name, email, password) => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}/cadastro`, { name, email, password });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao cadastrar usuário:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para enviar pedido de redefinição de senha\r\nexport const forgotPassword = async (email) => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}/esqueceu-senha`, { email });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao solicitar redefinição de senha:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para pesquisar cursos\r\nexport const searchCourses = async (query) => {\r\n  try {\r\n    const response = await axios.get(`${apiUrl}/search-course`, { params: { query } });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao pesquisar cursos:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para adicionar curso (somente admin)\r\nexport const addCourse = async (courseData, userData) => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}/add-course`, { courseData, userData });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao adicionar curso:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para remover curso (somente admin)\r\nexport const removeCourse = async (courseId, userData) => {\r\n  try {\r\n    const response = await axios.delete(`${apiUrl}/remove-course/${courseId}`, { data: { userData } });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao remover curso:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para visualizar detalhes da compra\r\nexport const viewPurchaseDetails = async (userId) => {\r\n  try {\r\n    const response = await axios.get(`${apiUrl}/purchase-details/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao visualizar detalhes da compra:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}