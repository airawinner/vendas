{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\airaw\\\\Documents\\\\venda-cursos\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// components/ProtectedRoute.js\nimport React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  userRole,\n  requiredRole,\n  children\n}) => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/search-course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  };\n  if (userRole !== requiredRole) {\n    setIsModalOpen(true);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onClose: handleCloseModal,\n        title: \"Access Denied\",\n        message: \"You do not have administrative privileges to access this page.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/search-course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useState","Navigate","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","userRole","requiredRole","children","_s","isModalOpen","setIsModalOpen","handleCloseModal","to","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","title","message","_c","$RefreshReg$"],"sources":["C:/Users/airaw/Documents/venda-cursos/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["// components/ProtectedRoute.js\r\nimport React, { useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport Modal from './Modal';\r\n\r\nconst ProtectedRoute = ({ userRole, requiredRole, children }) => {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const handleCloseModal = () => {\r\n        setIsModalOpen(false);\r\n        return <Navigate to=\"/search-course\" />;\r\n    };\r\n\r\n    if (userRole !== requiredRole) {\r\n        setIsModalOpen(true);\r\n        return (\r\n            <>\r\n                <Modal\r\n                    isOpen={isModalOpen}\r\n                    onClose={handleCloseModal}\r\n                    title=\"Access Denied\"\r\n                    message=\"You do not have administrative privileges to access this page.\"\r\n                />\r\n                <Navigate to=\"/search-course\" />\r\n            </>\r\n        );\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,YAAY;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;IAC3BD,cAAc,CAAC,KAAK,CAAC;IACrB,oBAAOT,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C,CAAC;EAED,IAAIX,QAAQ,KAAKC,YAAY,EAAE;IAC3BI,cAAc,CAAC,IAAI,CAAC;IACpB,oBACIT,OAAA,CAAAE,SAAA;MAAAI,QAAA,gBACIN,OAAA,CAACF,KAAK;QACFkB,MAAM,EAAER,WAAY;QACpBS,OAAO,EAAEP,gBAAiB;QAC1BQ,KAAK,EAAC,eAAe;QACrBC,OAAO,EAAC;MAAgE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eACFf,OAAA,CAACH,QAAQ;QAACc,EAAE,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAClC,CAAC;EAEX;EAEA,OAAOT,QAAQ;AACnB,CAAC;AAACC,EAAA,CAxBIJ,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}